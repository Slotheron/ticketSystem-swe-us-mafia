### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.ITicketDatabase
  commentId: T:TicketSystem.DatabaseRepository.ITicketDatabase
  id: ITicketDatabase
  parent: TicketSystem.DatabaseRepository
  children:
  - TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String,System.Int32)
  - TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  langs:
  - csharp
  - vb
  name: ITicketDatabase
  nameWithType: ITicketDatabase
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase
  type: Interface
  source:
    remote:
      path: src/DatabaseRepository/ITicketDatabase.cs
      branch: master
      repo: https://github.com/SofiaZaid/ticketSystem-swe-us-mafia.git
    id: ITicketDatabase
    path: src/DatabaseRepository/ITicketDatabase.cs
    startLine: 5
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: public interface ITicketDatabase
    content.vb: Public Interface ITicketDatabase
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String,System.Int32)
  id: EventAdd(System.String,System.String,System.Int32)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  langs:
  - csharp
  - vb
  name: EventAdd(String, String, Int32)
  nameWithType: ITicketDatabase.EventAdd(String, String, Int32)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/ITicketDatabase.cs
      branch: master
      repo: https://github.com/SofiaZaid/ticketSystem-swe-us-mafia.git
    id: EventAdd
    path: src/DatabaseRepository/ITicketDatabase.cs
    startLine: 13
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  summary: "\nAdd a new Event to the database\n"
  example: []
  syntax:
    content: TicketEvent EventAdd(string name, string description, int ticketeventprice)
    parameters:
    - id: name
      type: System.String
      description: Name of the event
    - id: description
      type: System.String
      description: A desription of the event, html markup of the event is allowed
    - id: ticketeventprice
      type: System.Int32
    return:
      type: TicketSystemEngine.TicketEvent
      description: An object representing the newly created TicketEvent
    content.vb: Function EventAdd(name As String, description As String, ticketeventprice As Integer) As TicketEvent
  overload: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd*
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  id: VenuesFind(System.String)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  langs:
  - csharp
  - vb
  name: VenuesFind(String)
  nameWithType: ITicketDatabase.VenuesFind(String)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/ITicketDatabase.cs
      branch: master
      repo: https://github.com/SofiaZaid/ticketSystem-swe-us-mafia.git
    id: VenuesFind
    path: src/DatabaseRepository/ITicketDatabase.cs
    startLine: 31
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  summary: "\nFind all venues matching the query\n"
  example: []
  syntax:
    content: IEnumerable<Venue> VenuesFind(string query)
    parameters:
    - id: query
      type: System.String
      description: A text which is user i looking for in the venues
    return:
      type: System.Collections.Generic.IEnumerable{TicketSystemEngine.Venue}
      description: A list of venues matching the query
    content.vb: Function VenuesFind(query As String) As IEnumerable(Of Venue)
  overload: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind*
references:
- uid: TicketSystem.DatabaseRepository
  commentId: N:TicketSystem.DatabaseRepository
  isExternal: false
  name: TicketSystem.DatabaseRepository
  nameWithType: TicketSystem.DatabaseRepository
  fullName: TicketSystem.DatabaseRepository
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
  isExternal: false
  name: EventAdd
  nameWithType: ITicketDatabase.EventAdd
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystemEngine.TicketEvent
  commentId: T:TicketSystemEngine.TicketEvent
  parent: TicketSystemEngine
  isExternal: false
  name: TicketEvent
  nameWithType: TicketEvent
  fullName: TicketSystemEngine.TicketEvent
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystemEngine
  commentId: N:TicketSystemEngine
  isExternal: false
  name: TicketSystemEngine
  nameWithType: TicketSystemEngine
  fullName: TicketSystemEngine
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind*
  commentId: Overload:TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind
  isExternal: false
  name: VenuesFind
  nameWithType: ITicketDatabase.VenuesFind
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind
- uid: System.Collections.Generic.IEnumerable{TicketSystemEngine.Venue}
  commentId: T:System.Collections.Generic.IEnumerable{TicketSystemEngine.Venue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Venue>
  nameWithType: IEnumerable<Venue>
  fullName: System.Collections.Generic.IEnumerable<TicketSystemEngine.Venue>
  nameWithType.vb: IEnumerable(Of Venue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TicketSystemEngine.Venue)
  name.vb: IEnumerable(Of Venue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketSystemEngine.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketSystemEngine.Venue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketSystemEngine.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketSystemEngine.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
